{
  "scripts": [
    {
      "id": "KSA-AIS-001",
      "detail": "accounts: checks that the resource differs depending on the permissions (ReadAccountsBasic and ReadAccountsDetail)",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-002",
      "detail": "accounts: Fails 404 on an invalid endpoint",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "uri": "/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-003",
      "detail": "accounts: minimal data returned for a given Account using the ReadAccountsBasic permission, status and headers",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-004",
      "detail": "accounts: checks that the resource returns the correct data depending on the permissions ReadAccountsDetail",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-005",
      "detail": "accounts: validates that the account resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-006",
      "detail": "accounts: validates that bulk account resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-007",
      "detail": "accounts: checks that the x-fapi-interaction-id value is played-back for an Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f56020520c"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-008",
      "detail": "accounts: checks that the x-fapi-interaction-id value is played-back for bulk Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f560205200"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-009",
      "detail": "accounts: checks the correct response is returned 401 if no token is used on an Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "uri": "accounts: /accounts/$accountId",
      "uriImplementation": "mandatory",
      "resource": "Account",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-010",
      "detail": "accounts: checks the correct response is returned if no token is used on a bulk account.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-011",
      "detail": "accounts: validates that the Account resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "uri": "/accounts/$accountId/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-012",
      "detail": "balances: checks that the balances resource returns the correct data depending on the permissions granted.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-013",
      "detail": "balances: validates that the balance resource fails correctly given an invalid permissions",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [],
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-014",
      "detail": "balances: checks the correct response is returned when given an invalid Account for a Balance.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-015",
      "detail": "balances: checks the correct response is returned 401 using a Client Credential Grant token",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "headers": {
        "Authorization": "Bearer $client_access_token"
      },
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-016",
      "description": "Fails 404 on an invalid Balance resource.",
      "detail": "balances: validates that the balance resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances/foobar",
      "uriImplementation": "optional",
      "resource": "Balance",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-017",
      "detail": "balances: checks that the value in the x-fapi-interaction-id response header is played-back for account Balances.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-018",
      "detail": "beneficiaries: minimal data returned for a given Beneficiary using the ReadBeneficiariesBasic permission, status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-019",
      "detail": "beneficiaries: validates that the beneficiary resource fails correctly given an invalid permission",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-020",
      "detail": "beneficiaries: checks the correct response is returned when given an invalid account for a Beneficiary.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-021",
      "detail": "beneficiaries: validates that the beneficiary resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-022",
      "detail": "beneficiaries: x-fapi-interaction-id is played-black for account Beneficiary.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-023",
      "detail": "direct-debits: checks that the resource returns the correct data depending permission ReadDirectDebits with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-024",
      "detail": "direct-debits: checks the correct response is returned when given an invalid account for Direct Debit.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-025",
      "detail": "direct-debits: validates that the Direct Debit resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-026",
      "detail": "direct-debits: checks that the value in the x-fapi-interaction-id response header is played-back for account Direct Debit.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-027",
      "detail": "parties: checks that the resource returns the correct data depending permission ReadParty with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-028",
      "detail": "parties: checks that data is returned for ReadPartyPSU with additional schema checks, status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadPartyPSU"
      ],
      "uri": "/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-029",
      "detail": "parties: checks that the resource returns the correct data depending permission ReadParty with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-030",
      "detail": "parties: checks the correct response is returned when given an invalid account for an Party.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-031",
      "detail": "parties: validates that the party resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-032",
      "detail": "parties: checks the correct response is returned 401 using a CCG token",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "headers": {
        "Authorization": "Bearer $client_access_token"
      },
      "uri": "/parties",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-033",
      "detail": "scheduled-payments: checks that detail level is returned resource with permission ReadScheduledPaymentsDetail",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-034",
      "detail": "scheduled-payments: checks that the bulk resource returns the correct data depending permission ReadScheduledPaymentsDetail with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/scheduled-payments",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-035",
      "detail": "scheduled-payments: checks the correct response is returned when given an invalid account for a Scheduled Payment.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-036",
      "detail": "scheduled-payments: validates that the Scheduled Payment resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-037",
      "detail": "scheduled-payments: checks that the value in the x-fapi-interaction-id response header is played-back for account Product.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-038",
      "detail": "standing-orders: checks that detail level is returned resource with permission ReadStandingOrdersDetail to access the resource with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-039",
      "detail": "standing-orders: checks the correct response is returned when given an invalid account for a Standing Order.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-040",
      "detail": "standing-orders: validates that the Standing Order resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders/foobar",
      "uriImplementation": "conditional",
      "resource": "StandingOrder",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-041",
      "detail": "standing-orders: checks that the value in the x-fapi-interaction-id response header is played-back for account Product.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "uri": "/accounts/$accountId/standing-orders",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-042",
      "detail": "transactions: checks that the resource differs depending on the permissions (ReadTransactionsBasic and ReadTransactionsDetail) used to access the resource with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "permissions-excluded": [
        "ReadTransactionsDetail"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-043",
      "detail": "transactions: checks that the resource returns the correct data depending on the permissions ReadTransactionsBasic with additional additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-044",
      "detail": "transactions: checks that the endpoint processed the query parameters and returns the expected resource format.",
      "apiVersion": ">=0.0.0",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "queryParameters": {
        "fromBookingDateTime": "2020-04-23T15:47:00",
        "toBookingDateTime": "2020-04-23T15:48:00"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-045",
      "detail": "transactions: checks that the endpoint processed the query parameters and returns the expected resource format.",
      "apiVersion": ">=0.0.0",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "queryParameters": {
        "fromBookingDateTime": "2020-04-23T15:47:00.999",
        "toBookingDateTime": "2020-04-23T15:48:00.999"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-046",
      "detail": "transactions: validates that the Transaction resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-047",
      "detail": "transactions: checks that the x-fapi-interaction-id value is played-back for an Transaction.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f56020520c"
      },
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-048",
      "detail": "transactions: checks the correct response is returned when given an invalid account for a Transaction.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadTransactionsBasic",
        "ReadTransactionsDetail"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id"
      },
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-101",
      "detail": "accounts-jwt: checks that the resource differs depending on the permissions (ReadAccountsBasic and ReadAccountsDetail)",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-102",
      "detail": "accounts-jwt: Fails 404 on an invalid endpoint",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "uri": "/foobar",
      "asserts": [
        "Assert_404"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-103",
      "detail": "accounts-jwt: minimal data returned for a given Account using the ReadAccountsBasic permission, status and headers",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-104",
      "detail": "accounts-jwt: checks that the resource returns the correct data depending on the permissions ReadAccountsDetail",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "method": "get",
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-105",
      "detail": "accounts-jwt: validates that the account resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-106",
      "detail": "accounts-jwt: validates that bulk account resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-107",
      "detail": "accounts-jwt: checks that the x-fapi-interaction-id value is played-back for an Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f56020520c"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts/$accountId",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"        
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-108",
      "detail": "accounts-jwt: checks that the x-fapi-interaction-id value is played-back for bulk Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f560205200"
      },
      "permissions": [
        "ReadAccountsDetail"
      ],
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-109",
      "detail": "accounts-jwt: checks the correct response is returned 401 if no token is used on an Account.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "uri": "accounts: /accounts/$accountId",
      "uriImplementation": "mandatory",
      "resource": "Account",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-110",
      "detail": "accounts-jwt: checks the correct response is returned if no token is used on a bulk account.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "uri": "/accounts",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-111",
      "detail": "accounts-jwt: validates that the Account resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "uri": "/accounts/$accountId/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-112",
      "detail": "balances-jwt: checks that the balances resource returns the correct data depending on the permissions granted.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-113",
      "detail": "balances-jwt: validates that the balance resource fails correctly given an invalid permissions",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "permissions-excluded": [
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [],
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-114",
      "detail": "balances-jwt: checks the correct response is returned when given an invalid Account for a Balance.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-115",
      "detail": "balances-jwt: checks the correct response is returned 401 using a Client Credential Grant token",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "Authorization": "Bearer $client_access_token",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-116",
      "description": "Fails 404 on an invalid Balance resource.",
      "detail": "balances-jwt: validates that the balance resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances/foobar",
      "uriImplementation": "optional",
      "resource": "Balance",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-117",
      "detail": "balances-jwt: checks that the value in the x-fapi-interaction-id response header is played-back for account Balances.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBalances"
      ],
      "uri": "/accounts/$accountId/balances",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-118",
      "detail": "beneficiaries-jwt: minimal data returned for a given Beneficiary using the ReadBeneficiariesBasic permission, status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },    
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-119",
      "detail": "beneficiaries-jwt: validates that the beneficiary resource fails correctly given an invalid permission",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-120",
      "detail": "beneficiaries-jwt: checks the correct response is returned when given an invalid account for a Beneficiary.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-121",
      "detail": "beneficiaries-jwt: validates that the beneficiary resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-122",
      "detail": "beneficiaries-jwt: x-fapi-interaction-id is played-black for account Beneficiary.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadBeneficiariesBasic"
      ],
      "uri": "/accounts/$accountId/beneficiaries",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-123",
      "detail": "direct-debits-jwt: checks that the resource returns the correct data depending permission ReadDirectDebits with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-124",
      "detail": "direct-debits-jwt: checks the correct response is returned when given an invalid account for Direct Debit.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-125",
      "detail": "direct-debits-jwt: validates that the Direct Debit resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-126",
      "detail": "direct-debits-jwt: checks that the value in the x-fapi-interaction-id response header is played-back for account Direct Debit.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadDirectDebits"
      ],
      "uri": "/accounts/$accountId/direct-debits",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-127",
      "detail": "parties-jwt: checks that the resource returns the correct data depending permission ReadParty with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-128",
      "detail": "parties-jwt: checks that data is returned for ReadPartyPSU with additional schema checks, status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadPartyPSU"
      ],
      "uri": "/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-129",
      "detail": "parties-jwt: checks that the resource returns the correct data depending permission ReadParty with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-130",
      "detail": "parties-jwt: checks the correct response is returned when given an invalid account for an Party.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-131",
      "detail": "parties-jwt: validates that the party resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadParty"
      ],
      "uri": "/accounts/$accountId/parties/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-132",
      "detail": "parties-jwt: checks the correct response is returned 401 using a CCG token",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "uri": "/parties",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "Authorization": "Bearer $client_access_token",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-133",
      "detail": "scheduled-payments-jwt: checks that detail level is returned resource with permission ReadScheduledPaymentsDetail",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-134",
      "detail": "scheduled-payments-jwt: checks that the bulk resource returns the correct data depending permission ReadScheduledPaymentsDetail with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/scheduled-payments",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-135",
      "detail": "scheduled-payments-jwt: checks the correct response is returned when given an invalid account for a Scheduled Payment.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-136",
      "detail": "scheduled-payments-jwt: validates that the Scheduled Payment resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments/foobar",
      "asserts": [
        "Assert_404"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-137",
      "detail": "scheduled-payments-jwt: checks that the value in the x-fapi-interaction-id response header is played-back for account Product.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadScheduledPaymentsDetail"
      ],
      "uri": "/accounts/$accountId/scheduled-payments",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-138",
      "detail": "standing-orders-jwt: checks that detail level is returned resource with permission ReadStandingOrdersDetail to access the resource with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-139",
      "detail": "standing-orders-jwt: checks the correct response is returned when given an invalid account for a Standing Order.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-140",
      "detail": "standing-orders-jwt: validates that the Standing Order resource returns the correct status code (404 Not Found) given an invalid endpoint.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders/foobar",
      "uriImplementation": "conditional",
      "resource": "StandingOrder",
      "asserts": [
        "Assert_404"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-141",
      "detail": "standing-orders-jwt: checks that the value in the x-fapi-interaction-id response header is played-back for account Product.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "93bac548-d2de-4546-b106-880a5018460d"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadStandingOrdersDetail"
      ],
      "uri": "/accounts/$accountId/standing-orders",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-142",
      "detail": "transactions-jwt: checks that the resource differs depending on the permissions (ReadTransactionsBasic and ReadTransactionsDetail) used to access the resource with additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "permissions-excluded": [
        "ReadTransactionsDetail"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-143-jwt",
      "detail": "transactions-jwt: checks that the resource returns the correct data depending on the permissions ReadTransactionsBasic with additional additional schema checks on status and headers.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-144",
      "detail": "transactions-jwt: checks that the endpoint processed the query parameters and returns the expected resource format.",
      "apiVersion": ">=0.0.0",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "queryParameters": {
        "fromBookingDateTime": "2020-04-23T15:47:00",
        "toBookingDateTime": "2020-04-23T15:48:00"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-145",
      "detail": "transactions-jwt: checks that the endpoint processed the query parameters and returns the expected resource format.",
      "apiVersion": ">=0.0.0",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "queryParameters": {
        "fromBookingDateTime": "2020-04-23T15:47:00.999",
        "toBookingDateTime": "2020-04-23T15:48:00.999"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsDetail",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "asserts": [
        "Assert_200",
        "Assert_FAPIHeader"
      ],
      "method": "get",
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "true"
    },
    {
      "id": "KSA-AIS-146",
      "detail": "transactions-jwt: validates that the Transaction resource fails correctly given an invalid or incorrect token.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId"
      },
      "permissions-excluded": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts": [
        "Assert_401"
      ],
      "headers": {
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-147",
      "detail": "transactions-jwt: checks that the x-fapi-interaction-id value is played-back for an Transaction.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "$consentedAccountId",
        "x-fapi-interaction-id": "f5a10e5e-0c46-41c5-a7b7-c8f56020520c"
      },
      "permissions": [
        "ReadAccountsBasic",
        "ReadTransactionsBasic",
        "ReadTransactionsDebits",
        "ReadTransactionsCredits"
      ],
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts": [
        "Assert_FAPIPlayBack"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-148",
      "detail": "transactions-jwt: checks the correct response is returned when given an invalid account for a Transaction.",
      "parameters": {
        "tokenRequestScope": "accounts",
        "accountId": "foobar"
      },
      "permissions": [
        "ReadTransactionsBasic",
        "ReadTransactionsDetail"
      ],
      "uri": "/accounts/$accountId/transactions",
      "method": "get",
      "asserts_one_of": [
        "Assert_400",
        "Assert_403"
      ],
      "headers": {
        "x-fapi-interaction-id": "$x-fapi-interaction-id",
        "accept": "application/jwt"
      },      
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-180",
      "detail": "consents: Posts a new consent",
      "parameters": {
        "postData": "$ksaAisConsentBody"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_201",
        "Assert_AwaitingAuthorization"
      ],
      "saveToContext": {
        "name": "KSA-AIS-180-ConsentId",
        "value": "Data.ConsentId"
      },
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-181",
      "detail": "consents: Retrieves Awaiting ConsentId",
      "parameters": {
        "consentId": "$KSA-AIS-180-ConsentId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {        
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "asserts": [
        "Assert_200"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-182",
      "detail": "consents: Post Account Consent with minimum mandatory fields",
      "parameters": {
        "postData": "$ksaAisMinConsentBody"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "Authorization": "Bearer $ccg_token",
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_201",
        "Assert_AwaitingAuthorization"
      ],
      "saveToContext": {
        "name": "KSA-AIS-182-ConsentId",
        "value": "Data.ConsentId"
      },
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-183",
      "detail": "consents: Retrieves Awaiting ConsentId",
      "parameters": {
        "consentId": "$KSA-AIS-180-ConsentId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "Authorization": "Bearer $ccg_token",
        "accept": "application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "asserts": [
        "Assert_200",
        "Assert_AwaitingAuthorization"        
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-184",
      "detail": "consents: Post Account Consent with Empty Body",
      "parameters": {
        "postData": "$ksaAisConsentBodyEmpty"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_400"
      ],
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-185",
      "detail": "consents: Post Account Consent with Invalid Account Type",
      "parameters": {
        "postData": "$ksaAisConsentBodyInvalidAccountType"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_400"
      ],
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-186",
      "detail": "consents: Patch Consent invalid body",
      "parameters": {
          "consentId": "$KSA-AIS-180-ConsentId",
          "postData": "$ksaAisPatchConsentInvalidBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/json",
          "accept":"application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_400"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },    
    {
      "id": "KSA-AIS-187",
      "detail": "consents: Patch Consent empty body",
      "parameters": {
          "consentId": "$KSA-AIS-180-ConsentId",
          "postData": "$ksaAisPatchConsentEmptyBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/json",
          "accept":"application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_400"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-188",
      "detail": "consents: Patch Consent",
      "parameters": {
          "consentId": "$KSA-AIS-180-ConsentId",
          "postData": "$ksaAisPatchConsentBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/json",
          "accept":"application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_204"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },    
    {
      "id": "KSA-AIS-190",
      "detail": "consents-jwt: Posts a new consent",
      "parameters": {
        "postData": "$ksaAisConsentBody"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/jwt",
        "accept": "application/jwt"        
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_201",
        "Assert_AwaitingAuthorization"
      ],
      "saveToContext": {
        "name": "KSA-AIS-190-ConsentId",
        "value": "Data.ConsentId"
      },
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-191",
      "detail": "consents-jwt: Retrieves Awaiting ConsentId",
      "parameters": {
        "consentId": "$KSA-AIS-190-ConsentId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {        
        "accept": "application/jwt"
      },
      "uri": "/account-access-consents/$consentId",
      "asserts": [
        "Assert_200"
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-192",
      "detail": "consents-jwt: Post Account Consent with minimum mandatory fields",
      "parameters": {
        "postData": "$ksaAisMinConsentBody"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "Authorization": "Bearer $ccg_token",
        "content-type": "application/jwt",
        "accept": "application/jwt"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_201",
        "Assert_AwaitingAuthorization"
      ],
      "saveToContext": {
        "name": "KSA-AIS-192-ConsentId",
        "value": "Data.ConsentId"
      },
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-193",
      "detail": "consents-jwt: Retrieves Awaiting ConsentId",
      "parameters": {
        "consentId": "$KSA-AIS-190-ConsentId"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "Authorization": "Bearer $ccg_token",
        "accept": "application/jwt"
      },
      "uri": "/account-access-consents/$consentId",
      "asserts": [
        "Assert_200",
        "Assert_AwaitingAuthorization"        
      ],
      "method": "get",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-194",
      "detail": "consents-jwt: Post Account Consent with Empty Body",
      "parameters": {
        "postData": "$ksaAisConsentBodyEmpty"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/jwt",
        "accept": "application/jwt"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_400"
      ],
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-195",
      "detail": "consents-jwt: Post Account Consent with Invalid Account Type",
      "parameters": {
        "postData": "$ksaAisConsentBodyInvalidAccountType"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/jwt",
        "accept": "application/jwt"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_400"
      ],
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-196",
      "detail": "consents-jwt: Patch Consent invalid body",
      "parameters": {
          "consentId": "$KSA-AIS-190-ConsentId",
          "postData": "$ksaAisPatchConsentInvalidBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/jwt",
          "accept":"application/jwt"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_400"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },    
    {
      "id": "KSA-AIS-197",
      "detail": "consents-jwt: Patch Consent empty body",
      "parameters": {
          "consentId": "$KSA-AIS-180-ConsentId",
          "postData": "$ksaAisPatchConsentEmptyBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/jwt",
          "accept":"application/jwt"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_400"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-198",
      "detail": "consents-jwt: Patch Consent",
      "parameters": {
          "consentId": "$KSA-AIS-190-ConsentId",
          "postData": "$ksaAisPatchConsentBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/jwt",
          "accept":"application/jwt"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_204"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-300",
      "detail": "consents: Webhook Test",
      "parameters": {
        "postData": "$ksaAisConsentBodyWebhook"
      },
      "permissions": [
        "ReadAccountsBasic"
      ],
      "headers": {
        "content-type": "application/json",
        "accept": "application/json"
      },
      "uri": "/account-access-consents",
      "asserts": [
        "Assert_201",
        "Assert_AwaitingAuthorization"
      ],
      "saveToContext": {
        "name": "KSA-AIS-300-ConsentId",
        "value": "Data.ConsentId"
      },
      "body": "$postData",
      "method": "post",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-AIS-301",
      "detail": "consents: Webhook Patch Consent",
      "parameters": {
          "consentId": "$KSA-AIS-300-ConsentId",
          "postData": "$ksaAisPatchConsentBody"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/json",
          "accept":"application/json"
      },
      "uri": "/account-access-consents/$consentId",
      "body": "$postData",
      "asserts":[
          "Assert_204"
      ],
      "method": "patch",
      "schemaCheck": "false"
    },
    {
      "id": "KSA-SUB-302",
      "detail": "Ensure All Subscriptions Received",
      "parameters": {
          "consentId": "$KSA-AIS-300-ConsentId",
          "postData": "$ksaAisSubscriptionCheck"                
      },
      "permissions": [
          "ReadAccountsBasic"
      ],       
      "headers": {
          "content-type":"application/json",
          "accept":"application/json",
          "fcskey":"SAMA-FCS"
      },
      "host": "https://events.fcs.openbanking.sa/query",
      "uri": "/account-access-consents",
      "body": "$postData",
      "asserts":[
          "Assert_200"
      ],
      "method": "post",
      "schemaCheck": "false"
    }        
  ]
}